:root {
  // 基準となるフォントサイズは下記を想定すること
  // font-size: 1rem;

  // Custom properties
  --s1: 1rem;
  --s2: calc(var(--s1) * 1.5);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

h1 { font-size: 1.5rem; }
h2 { font-size: 1.4rem; }
h3 { font-size: 1.3rem; }
h4 { font-size: 1.2rem; }
h5 { font-size: 1.1rem; }

html {
  font-size: 100%;
  font-family: 'ヒラギノ丸ゴ ProN W4', 'Hiragino Maru Gothic ProN';
  color: $COLOR_TEXT;
  line-height: 1.7;
  word-wrap: break-word;
  -webkit-text-size-adjust: 100%;  // Keep font size when lotating screen in Android devices
  -webkit-font-smoothing: antialiased;
}

img {
  max-width: 100%;
  height: auto;
  aspect-ratio: attr(width) / attr(height);
  vertical-align: bottom;
}

a {
  text-decoration: none;
  font-weight: bolder;

  &:link { // 未訪問
    color: $COLOR_LINK;
  }
  &:visited { // 訪問済
    color: $COLOR_LINK_VISITED;
  }
  &:hover:not(:has(img, svg)) { /* マウスフォーカス */
    background-color: $COLOR_LINK_HOVER_BG;
    text-decoration: none;
  }
  &:focus { /* 選択中 */
    background-color: $COLOR_LINK_FOCUS_BG;
  }
}

// 単語・用語定義
dt {
  font-weight: bolder;
  margin-top: 1em;
}
dd {
  margin-top: 0.5em;
  margin-left: 1em;
  @include screen-size-lg { margin-left: 1.5em; }
  @include screen-size-xl { margin-left: 2em; }
}

strong {
  font-weight: bolder;
  color: $COLOR_TEXT_STRONG;
}

code {
  font-family: $FONT_CODE;
  color: $COLOR_CODE;
  border-radius: 0.2em;

  // pre によるコードブロックの背景色を上書きしてしまわないように、
  // 文中で単独で code を使ったときだけ code の背景色を設定する。
  :not(pre) > & {
    background: $COLOR_CODE_BG;
    padding: 0.2em 0.3em;
  }

  strong > & {
    color: $COLOR_TEXT_STRONG;
    background: $COLOR_TEXT_STRONG_BG;
  }

  // リンクテキスト内のコードには code 要素特有の色を付けない
  a & {
    // color: inherit;
    // color: revert;
    color: #333;
    background: #eee;
    font-weight: normal;
    padding: 0 0.2em;
  }
}

pre {
  font-family: $FONT_CODE;
  background: $COLOR_CODE_BG;
  overflow-x: auto;

  padding: 0.5em 0.8em;
  line-height: 1.3;
  border: solid 1px darken($COLOR_CODE_BG, 10%);
  border-radius: 0.5em;

  // タブ文字がデフォルトの 8 文字では大きすぎるので調整（主に Go 言語用）
  tab-size: 2;
  @include screen-size-lg { tab-size: 4; }
  @include screen-size-xl { tab-size: 6; }

  // 印刷時ははみ出たコードを折り返す
  @media print {
    white-space: pre-wrap;
    tab-size: 2;
    font-size: 80%;
  }

  li & {
    margin: 0.5em 0;
  }
}

ul, ol {
  padding-left: 1.5em;
  @include screen-size-sm { padding-left: 2.0em }
  @include screen-size-md { padding-left: 2.5em }
}

table {
  margin-left: auto;
  margin-right: auto;
  border-collapse: collapse;
  th, td {
    border: solid 1px #ccc;
    padding: 0.3em;
  }
  th {
    background: #eee;
  }

  // テーブルを水平スクロール可能にする。
  // table renderer hook ができたら、
  // table 要素の上に div style="overflow-x:auto" 要素を追加
  // することで対応する方がよいらしい。
  display: block;
  max-width: -moz-fit-content;
  max-width: fit-content;
  overflow-x: auto;
}

blockquote {
  color: #555;
  font-style: italic;
  padding: 0 0.3em 0 0.5em;
  border-left: solid 0.2em #555;

  margin-left: 0;
  @include screen-size-md { margin-left: 0.5em; }

  blockquote {
    margin-left: 0;
    padding-right: 0;
    margin: 0.5em 0;
  }
}

